FROM docker.io/rust:1-slim-bookworm AS build


WORKDIR /build

RUN apt-get update && apt-get -y install pkg-config
RUN apt-get update && apt-get -y install libsqlite3-dev sqlite3

RUN apt-get update && apt-get install -y libssl-dev g++ cmake proj-bin

COPY ./cartographer .

RUN --mount=type=cache,target=/build/target \
    --mount=type=cache,target=/usr/local/cargo/registry \
    --mount=type=cache,target=/usr/local/cargo/git \
    set -eux; \
    cargo build --release; \
    objcopy --compress-debug-sections target/release/cartographer ./main; \
    cp src/database/compute_route.sql ./compute_route.sql

################################################################################

FROM docker.io/debian:bookworm-slim

WORKDIR /app

RUN apt-get update && apt-get install -y libssl-dev g++ cmake proj-bin osm2pgsql
## copy the main binary
COPY --from=build /build/main ./

## copy runtime assets which may or may not exist
COPY --from=build /build/Rocket.tom[l] ./static
COPY --from=build /build/stati[c] ./static
COPY --from=build /build/template[s] ./templates

## ensure the container listens globally on port 8000
ENV ROCKET_ADDRESS=0.0.0.0
ENV ROCKET_PORT=8000

CMD ./main
